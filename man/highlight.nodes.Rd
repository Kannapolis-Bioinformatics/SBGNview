% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/highlight.utilities.R
\name{highlight.nodes}
\alias{highlight.nodes}
\title{Highlight input nodes}
\usage{
highlight.nodes(node.set = "all", node.set.id.type = "CompoundName",
  glyphs.id.type = "pathwayCommons", cpd.or.gene = "compound",
  stroke.color = "black", stroke.width = 10, stroke.opacity = 1,
  show.glyph.id = FALSE, select.glyph.class = c(), label.x.shift = 0,
  label.y.shift = 0, label.color = "black", label.font.size = NULL,
  label.spliting.string = NULL, labels = NULL)
}
\arguments{
\item{node.set}{A vector of character strings. Input node set that need to be highlighted. It can be any ID types supported by SBGNview.}

\item{node.set.id.type}{A character string. ID type of input nodes.}

\item{glyphs.id.type}{A character string. ID type of nodes in SBGN-ML file, which is used as node IDs in the SBGNview object returned by the SBGNview() function.}

\item{cpd.or.gene}{A character string. One of "gene" or "compound". Currently highlight.node() only supports highlighting macromolecule and simple chemical nodes. This parameter is used to find the ID mapping between input node set IDs and glyph IDs.}

\item{stroke.color}{A character string. The vorder color of highlighted nodes.}

\item{stroke.width}{A character string. The border width of highlighted nodes.}

\item{stroke.opacity}{Numeric}

\item{show.glyph.id}{Logic}

\item{select.glyph.class}{Character}

\item{label.x.shift}{Numeric}

\item{label.y.shift}{Numeric}

\item{label.color}{Character}

\item{label.font.size}{Numeric}

\item{label.spliting.string}{Character}

\item{labels}{Character}
}
\value{
A SBGNview obj
}
\description{
Change node properties such as border color and width to highlight a list of input nodes. This function should be used as the second argument to function \code{\link{+.SBGNview}}.
}
\examples{
 data(SBGNview.obj)
\dontrun{
data("SBGNview.obj" )
obj.new = SBGNview.obj + 
       highlight.nodes(node.set = c("tyrosine", "(+-)-epinephrine"),
                      stroke.width = 4, stroke.color = "green") 
 }
}
